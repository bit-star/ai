

entity ProcessTemplate {
	name String,
    processCode String
}



entity ProcessInstanceEvent {
    finishTime Instant,
  	corpId String,
    eventType String,
    businessId String,
    title String,
    type String,
    url String,
    result String,
 	createTime String,
    processCode String,
    bizCategoryId String,
    staffId String
}

entity ProcessInstance{
	id String,
	attachedProcessInstanceIds String,
    bizAction String,
    businessId String,
    createTime Instant,
    finishTime Instant,
    operationRecords String,
    originatorDeptId String,
    originatorDeptName String,
    originatorUserid String,
    result String,
    status String,
    tasks String,
    title String
}

entity  FormComponentValues{
	componentType String,
    id String,
    value String,
    name String,
    extValue String
}

entity ProcessMsgTask{
	deptIdList String,
    useridList String,
    toAllUser Boolean,
    msg String,
    executeTime Instant,
    agentId Long,
    type DdMessageType,
    status MessageStatus
}

entity ProcessMsgSubTask{
    useridList String,
    taskId Long
}

enum DdMessageType {
	Voice , ActionCard, Markdown, Oa, Link, File , Text , Image
}

enum MessageStatus {
	 SentSuccessfully , Sending, NotSentYet
}







// defining multiple OneToMany relationships with comments
relationship OneToMany {
	ProcessTemplate to ProcessInstance,
	ProcessInstance  to ProcessInstanceEvent,
	ProcessInstance to FormComponentValues,
    ProcessInstance to ProcessMsgTask,
    ProcessMsgTask to ProcessMsgSubTask
}

// Set pagination options
paginate * with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service * with serviceClass

// Set an angular suffix
angularSuffix * with mpAi
